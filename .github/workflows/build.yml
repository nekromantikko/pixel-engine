name: Build Validation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          libvulkan-dev \
          libsdl2-dev \
          build-essential \
          unzip \
          wget

    - name: Install Slang shader language
      run: |
        # Download and install Slang shader language
        cd /tmp
        wget -q https://github.com/shader-slang/slang/releases/download/v2024.13/slang-2024.13-linux-x86_64.zip
        unzip -q slang-2024.13-linux-x86_64.zip
        
        # Install to system directories
        sudo cp -r include/* /usr/local/include/
        sudo cp -r lib/* /usr/local/lib/
        sudo cp -r bin/* /usr/local/bin/
        sudo ldconfig
        
        # Create CMake configuration file for Slang
        sudo mkdir -p /usr/local/lib/cmake/slang
        cat << 'EOF' | sudo tee /usr/local/lib/cmake/slang/slangConfig.cmake
        # SlangConfig.cmake - CMake configuration file for Slang
        
        # Find the include directory
        find_path(slang_INCLUDE_DIR
            NAMES slang.h
            PATHS /usr/local/include /usr/include
            DOC "Slang include directory"
        )
        
        # Find the library
        find_library(slang_LIBRARY
            NAMES slang
            PATHS /usr/local/lib /usr/lib
            DOC "Slang library"
        )
        
        # Handle standard arguments
        include(FindPackageHandleStandardArgs)
        find_package_handle_standard_args(slang
            REQUIRED_VARS slang_LIBRARY slang_INCLUDE_DIR
            VERSION_VAR slang_VERSION
        )
        
        if(slang_FOUND)
            set(slang_INCLUDE_DIRS ${slang_INCLUDE_DIR})
            set(slang_LIBRARIES ${slang_LIBRARY})
        
            # Create the target if it doesn't exist
            if(NOT TARGET slang::slang)
                add_library(slang::slang SHARED IMPORTED)
                set_target_properties(slang::slang PROPERTIES
                    IMPORTED_LOCATION ${slang_LIBRARY}
                    INTERFACE_INCLUDE_DIRECTORIES ${slang_INCLUDE_DIR}
                )
            endif()
        endif()
        
        mark_as_advanced(slang_INCLUDE_DIR slang_LIBRARY)
        EOF
        
        echo "✓ Slang shader language installed successfully"

    - name: Verify dependencies
      run: |
        echo "Verifying required dependencies..."
        pkg-config --exists vulkan && echo "✓ Vulkan SDK available"
        pkg-config --exists sdl2 && echo "✓ SDL2 development libraries available"
        echo "✓ CMake version: $(cmake --version | head -1)"
        echo "✓ GCC version: $(gcc --version | head -1)"
        echo "✓ Slang compiler: $(slangc --version 2>/dev/null || echo 'installed')"

    - name: Configure project
      run: |
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_ASSETS=ON -DENABLE_EDITOR=ON

    - name: Build project
      run: |
        cmake --build build --verbose -- -j$(nproc)

    - name: Verify executables and assets
      run: |
        cd build
        echo "Checking build outputs..."
        ls -la pixelengine || echo "Main executable build may have failed (expected for asset testing)"
        ls -la asset_packer && echo "✓ Asset packer built successfully"
        ls -la assets.npak && echo "✓ Asset archive generated successfully"
        echo "✓ Build with assets completed successfully"